import{u as e,p as a,c as t,a as l,q as s,B as o,b as i,d as n,e as r,f as c,g as d,h as p,t as h,i as u,F as m,m as v,o as f}from"./index.73d977ee.js";import{u as g,b as y}from"./page.cebb6174.js";const _={class:"milk-header"},k={class:"header-nav"},b={class:"nav-menu"},x={id:"Home"},w=r("i",{class:"fa fa-home","aria-hidden":"true"},null,-1),A={id:"Archives"},j=r("i",{class:"fa fa-archive","aria-hidden":"true"},null,-1),C={id:"About"},N=r("i",{class:"fa fa-user-circle","aria-hidden":"true"},null,-1),T=r("span",{class:"nav-date"},[r("i",{class:"fa fa-calendar","aria-hidden":"true"}),r("span",{id:"date"})],-1),B=r("span",{class:"nav-system",id:"nav-system"},null,-1),L={class:"nav-access"},M=r("i",{class:"fa fa-universal-access",id:"nav-access"},null,-1),E=r("i",{class:"fa fa-angle-down"},null,-1),F={class:"dropdown-content",id:"dropdown-content"},S=v('<ul class="social"><li><a href="https://github.com/Ajinya57/FinalBlog" target="_blank" rel="noopener"><i class="fa fa-github-alt" aria-hidden="true"></i></a></li><li><a href="mailto:zhongyejun168@gmail.com"><i class="fa fa-envelope" aria-hidden="true"></i></a></li></ul>',1),U={key:0},D={key:0},I={href:"Login.vue",target:"_blank",rel:"noopener"},P={key:1},V={key:1},O=r("a",{href:"Login.vue",target:"_blank",rel:"noopener"},"***",-1),R={key:0},z={class:"milk-body"},Y={class:"draggable-toc"},q={class:"toc-title"},G=r("p",null,[p("process: "),r("span",null,"0")],-1),H=r("div",{class:"progress-container"},[r("div",{class:"progress-bar",id:"bar"})],-1),J=[r("span",{class:"toc-text"},"写在前面",-1)],Q=v('<li class="toc-item toc-level-2"><a class="toc-link" href="#准备yolov5环境"><span class="toc-text">准备yolov5环境</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#下载yolov5"><span class="toc-text">下载yolov5</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#下载依赖"><span class="toc-text">下载依赖</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#准备数据集"><span class="toc-text">准备数据集</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#准备原始数据"><span class="toc-text">准备原始数据</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#数据标记"><span class="toc-text">数据标记</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#选择标记工具"><span class="toc-text">选择标记工具</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#makesense-ai使用"><span class="toc-text">makesense.ai使用</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#最终准备"><span class="toc-text">最终准备</span></a></li></ol></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#模型的训练"><span class="toc-text">模型的训练</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#结果"><span class="toc-text">结果</span></a></li>',4),X={class:"post-content",id:"post-content"},$={id:"top"},K={class:"post"},W={class:"content-categories"},Z=r("i",{class:"fa fa-location-arrow"},null,-1),ee=r("li",null,"categories",-1),ae=r("li",null,">",-1),te={href:"/categories/NeuralNetwork/"},le=r("li",null,">",-1),se={href:"/categories/NeuralNetwork/yolov5/"},oe=v('<hr><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面 </h2><p> 参考：<a href="https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data" target="_blank" rel="noopener">https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data</a></p><p>训练环境：</p><ul><li>Ubuntu 20.04</li><li>NVIDIA GeForce GTX850M</li></ul><a id="more"></a><h2 id="准备yolov5环境"><a href="#准备yolov5环境" class="headerlink" title="准备yolov5环境"></a>准备yolov5环境 </h2><h3 id="下载yolov5"><a href="#下载yolov5" class="headerlink" title="下载yolov5"></a>下载yolov5 </h3><pre><code>git clone https://github.com/ultralytics/yolov5</code></pre><p>国内下载缓慢，可以使用gitee上fork的仓库，例如：</p><pre><code>git clone https://gitee.com/monkeycc/yolov5.git</code></pre><h3 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖 </h3><pre><code>pip3 install -r requirements.txt</code></pre><h2 id="准备数据集"><a href="#准备数据集" class="headerlink" title="准备数据集"></a>准备数据集 </h2><h3 id="准备原始数据"><a href="#准备原始数据" class="headerlink" title="准备原始数据"></a>准备原始数据 </h3><p> 这里使用的是<a href="https://baike.baidu.com/item/%E6%8E%A2%E9%99%A9%E6%B4%BB%E5%AE%9D" target="_blank" rel="noopener">《探险活宝》</a>，目标是检测Finn和Jake。 </p><h3 id="数据标记"><a href="#数据标记" class="headerlink" title="数据标记"></a>数据标记 </h3><h4 id="选择标记工具"><a href="#选择标记工具" class="headerlink" title="选择标记工具"></a>选择标记工具 </h4><p>yolov5推荐工具：</p><ul><li><a href="https://github.com/opencv/cvat" target="_blank" rel="noopener">CVAT</a></li><li><a href="https://www.makesense.ai" target="_blank" rel="noopener">makesense.ai</a></li><li><a href="https://labelbox.com" target="_blank" rel="noopener">Labelbox</a></li></ul><p>这里使用<code>makesense.ai</code>：</p><h4 id="makesense-ai使用"><a href="#makesense-ai使用" class="headerlink" title="makesense.ai使用"></a>makesense.ai使用 </h4><ol><li> 打开对应网站：<a href="https://www.makesense.ai" target="_blank" rel="noopener">https://www.makesense.ai</a></li></ol><ol start="2"><li>选择数据</li></ol><ol start="3"><li>选择Object Detection</li></ol><ol start="4"><li>Create labels</li></ol><p>创建对应标签，目标是Finn和Jake</p><p> 标签顺序最好对应<code>.yaml</code>配置文件中的<code>names</code>。 </p><ol start="5"><li>数据标注</li></ol><ol start="6"><li>导出</li></ol><p>选择YOLO格式并下载<code>.zip</code>压缩文件。</p><p>解压得到结果：</p><p>可以看到对应原始数据。</p><h4 id="最终准备"><a href="#最终准备" class="headerlink" title="最终准备"></a>最终准备 </h4><p> 在Ubuntu 20.04上进行训练，其它操作系统自行修改位置即可，数据集位置如下（示例）： </p><pre><code>/home/ash/dataset/yolo/\n|__ config.yaml\n|__ images\n|  |__ 1.png\n|  |__ 2.png\n|__ labels\n   |__ 1.txt\n   |__ 2.txt</code></pre><p><code>config.yaml</code>文件：</p><pre><code class="yaml">train: /home/ash/dataset/yolo/images\nval: /home/ash/dataset/yolo/images\n\nnc: 2\nnames: [&#39;finn&#39;, &#39;jake&#39;]</code></pre><ul><li><code>trian</code>：训练集数据文件夹</li><li><code>val</code>：测试集数据文件夹</li><li><code>nc</code>：标签数量</li><li><code>names</code>：标签名称（顺序根据前期标签顺序） </li></ul><p>val和train目录不一定相同，由于是测试（选择偷懒）。</p><h2 id="模型的训练"><a href="#模型的训练" class="headerlink" title="模型的训练"></a>模型的训练 </h2><p> 进入到<code>yolov5</code>目录（准备yolov5环境中内容），这里的位置是<code>/home/ash/project/yolov5</code></p><pre><code>python3 train.py --batch 2 --data /hom/ash/dataset/yolo/config.yaml --weights weights/yolov5s.pt</code></pre><p><code>--data</code>：定位到你的数据集的<code>.yaml</code>文件。<br><code>--batch</code>：GPU显存大可以更大，官方示例是16。（汗.jpg）<br><code>--weights</code>：yolov5权重文件，不提供（提前下载好）会帮你下载，网速有可能非常感人。 </p><p> 更多配置可以参考<code>detect.py</code>文件（没错，<code>train.py</code>参数参考文件是<code>detect.py</code>中的<code>parser</code>部分） </p><details><summary>detect.py中parser部分</summary><pre><code class="pyton">if __name__ == &#39;__main__&#39;:\n    parser = argparse.ArgumentParser()\n    parser.add_argument(&#39;--weights&#39;, nargs=&#39;+&#39;, type=str, default=&#39;yolov5s.pt&#39;, help=&#39;model.pt path(s)&#39;)\n    parser.add_argument(&#39;--source&#39;, type=str, default=&#39;data/images&#39;, help=&#39;source&#39;)  # file/folder, 0 for webcam\n    parser.add_argument(&#39;--img-size&#39;, type=int, default=640, help=&#39;inference size (pixels)&#39;)\n    parser.add_argument(&#39;--conf-thres&#39;, type=float, default=0.25, help=&#39;object confidence threshold&#39;)\n    parser.add_argument(&#39;--iou-thres&#39;, type=float, default=0.45, help=&#39;IOU threshold for NMS&#39;)\n    parser.add_argument(&#39;--max-det&#39;, type=int, default=1000, help=&#39;maximum number of detections per image&#39;)\n    parser.add_argument(&#39;--device&#39;, default=&#39;&#39;, help=&#39;cuda device, i.e. 0 or 0,1,2,3 or cpu&#39;)\n    parser.add_argument(&#39;--view-img&#39;, action=&#39;store_true&#39;, help=&#39;display results&#39;)\n    parser.add_argument(&#39;--save-txt&#39;, action=&#39;store_true&#39;, help=&#39;save results to*.txt&#39;)\n    parser.add_argument(&#39;--save-conf&#39;, action=&#39;store_true&#39;, help=&#39;save confidences in --save-txt labels&#39;)\n    parser.add_argument(&#39;--save-crop&#39;, action=&#39;store_true&#39;, help=&#39;save cropped prediction boxes&#39;)\n    parser.add_argument(&#39;--nosave&#39;, action=&#39;store_true&#39;, help=&#39;do not save images/videos&#39;)\n    parser.add_argument(&#39;--classes&#39;, nargs=&#39;+&#39;, type=int, help=&#39;filter by class:--class 0, or --class 0 2 3&#39;)\n    parser.add_argument(&#39;--agnostic-nms&#39;, action=&#39;store_true&#39;, help=&#39;class-agnostic NMS&#39;)\n    parser.add_argument(&#39;--augment&#39;, action=&#39;store_true&#39;, help=&#39;augmented inference&#39;)\n    parser.add_argument(&#39;--update&#39;, action=&#39;store_true&#39;, help=&#39;update all models&#39;)\n    parser.add_argument(&#39;--project&#39;, default=&#39;runs/detect&#39;, help=&#39;save results to project/name&#39;)\n    parser.add_argument(&#39;--name&#39;, default=&#39;exp&#39;, help=&#39;save results to project/name&#39;)\n    parser.add_argument(&#39;--exist-ok&#39;, action=&#39;store_true&#39;, help=&#39;existing project/name ok, do not increment&#39;)\n    parser.add_argument(&#39;--line-thickness&#39;, default=3, type=int, help=&#39;boundingbox thickness (pixels)&#39;)\n    parser.add_argument(&#39;--hide-labels&#39;, default=False, action=&#39;store_true&#39;, help=&#39;hide labels&#39;)\n    parser.add_argument(&#39;--hide-conf&#39;, default=False, action=&#39;store_true&#39;, help=&#39;hide confidences&#39;)</code></pre></details><p> 训练结果在<code>runs/train/</code>目录下，由于没有指定目标文件夹名称，一般都是最新的<code>expn</code>那个文件夹，权重文件在<code>expn/weights</code>目录下。 </p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果 </h2><pre><code>python3 detect.py --weights runs/train/exp4/weights/best.pt --source /home/ash/test.png</code></pre><hr><div class="content-tags"><i class="fa fa-tags"></i><ul><li><a href="/tags/NeuralNetwork/"> NeuralNetwork </a></li></ul></div><div class="comment-tabs" id="comment-tabs"> comment: <ul><li><a href="#Valine">Valine</a></li><li><a href="#LiveRe">LiveRe</a></li><li><a href="#ChangYan">ChangYan</a></li></ul><div id="ChangYan"><div id="SOHUCS"></div></div><div id="LiveRe"><div id="lv-container" data-id="city" data-uid="MTAyMC80NjA4MS8yMjU5Mg=="><noscript>Please activate JavaScript for write a comment in LiveRe</noscript></div></div><div id="Valine"><div id="vcomments"></div></div></div>',52),ie=r("div",null,[r("button",{id:"scroll2top"},"back to top")],-1);var ne={__name:"Blog",setup(v){const ne=e(),re=a(),ce=t((()=>ne.getters.user)),de=()=>{ne.dispatch("logout")};g(),y();const pe=e=>{e.preventDefault();const a=e.currentTarget.getAttribute("href").slice(1),t=document.getElementById(a);t&&t.scrollIntoView({behavior:"smooth"})},he=l([]),ue=l([]);return s((()=>{he.value=["h1","h2","h3","h4","h5","h6"].map((e=>Array.from(document.querySelectorAll(e)))).flat().sort(((e,a)=>e.offsetTop-a.offsetTop))})),s((async()=>{const e=await o.get(`/api/getBlog.php?id=${re.params.id}`);ue.value=e.data.blog,console.log(ue.value)})),t((()=>he.value.map((e=>({id:e.id,textContent:e.textContent}))))),(e,a)=>{const t=i("router-link");return f(),n(m,null,[r("div",_,[r("nav",k,[r("ul",b,[r("li",x,[w,c(t,{to:"/home"},{default:d((()=>[p("Home")])),_:1})]),r("li",A,[j,c(t,{to:{name:"archives",params:{page:1}}},{default:d((()=>[p("Archives")])),_:1})]),r("li",C,[N,c(t,{to:"/about"},{default:d((()=>[p("About")])),_:1})])]),T,B,r("span",L,[M,E,r("div",F,[S,r("ul",null,[ce.value?(f(),n("li",U,[ce.value.isRoot?(f(),n("span",D,[p("Power by "),c(t,{to:{path:"/login"}},{default:d((()=>[r("a",I,h(ce.value.name),1)])),_:1})])):(f(),n("span",P,"Power by "+h(ce.value.name),1))])):(f(),n("li",V,[r("span",null,[p("Power by "),c(t,{to:{path:"/login"}},{default:d((()=>[O])),_:1})])]))]),ce.value?(f(),n("ul",R,[r("li",null,[r("span",null,[c(t,{to:"/home",onClick:de},{default:d((()=>[p("QUIT")])),_:1})])])])):u("",!0)])])])]),r("div",z,[r("div",Y,[r("div",q,h(ue.value.title),1),G,H,r("ol",{class:"toc"},[r("li",{class:"toc-item toc-level-2"},[r("a",{class:"toc-link",href:"#写在前面",onClick:pe},J)]),Q])]),r("div",X,[r("div",$,h(ue.value.title),1),r("div",K,[r("div",W,[Z,r("ul",null,[ee,ae,r("li",null,[r("a",te,h(ue.value.category),1)]),le,r("li",null,[r("a",se,h(ue.value.tag),1)])])]),oe])]),ie])],64)}}};export{ne as default};
